import { TestBed } from '@angular/core/testing';
import { SeuComponente } from './seu-componente.component'; // Substitua pelo caminho correto

describe('SeuComponente', () => {
  let component: SeuComponente;

  beforeEach(() => {
    TestBed.configureTestingModule({
      declarations: [SeuComponente],
    }).compileComponents();

    const fixture = TestBed.createComponent(SeuComponente);
    component = fixture.componentInstance;
  });

  it('deve retornar true quando todos os arquivos correspondem', () => {
    // Define os dados simulados
    component.valuesNameFile = ['arquivo1', 'arquivo2'];
    component.selectedFiles = [
      { name: 'arquivo1.pdf' },
      { name: 'arquivo2.doc' },
    ];

    // Chama o método a ser testado
    const result = component.validaNameArquivo();

    // Verifica se o resultado é true
    expect(result).toBe(true);
  });

  it('deve retornar false quando um arquivo não é encontrado', () => {
    // Define os dados simulados
    component.valuesNameFile = ['arquivo1', 'arquivo3'];
    component.selectedFiles = [
      { name: 'arquivo1.pdf' },
      { name: 'arquivo2.doc' },
    ];

    // Chama o método a ser testado
    const result = component.validaNameArquivo();

    // Verifica se o resultado é false
    expect(result).toBe(false);

    // Verifica se o valor não encontrado foi atribuído corretamente
    expect(component.valueNotFind).toBe('arquivo3');
  });
});
``
