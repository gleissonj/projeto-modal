@isTest
private class LeadServiceTest {
    
    @isTest
    static void testCreateNewLeadToUpdateCPF() {
        
        // 1. Criar um Lead de exemplo (leadCurrent) que será atualizado
        Lead leadCurrent = new Lead(
            FirstName = 'OldFirstName',
            LastName = 'OldLastName',
            Email = 'oldemail@example.com',
            Phone = '1234567890',
            MobilePhone = '0987654321'
        );
        insert leadCurrent;  // Inserir o Lead no banco de dados para referência no teste

        // 2. Criar dados de entrada simulando o ContactResponse
        ContactResponse newLead = new ContactResponse();
        newLead.nome = 'NewFirstName NewLastName';
        
        // Criando uma lista de emails de exemplo
        Email email = new Email();
        email.id_email = '1';
        email.valor_dado_cadastral = new EmailRegistrationData();
        email.valor_dado_cadastral.email = 'newemail@example.com';
        newLead.emails = new List<Email>{ email };
        
        // Criando uma lista de telefones de exemplo
        Telephone phone1 = new Telephone();
        phone1.id_telefone = '1';
        phone1.valor_dado_cadastral = new TelephoneRegistrationData();
        phone1.valor_dado_cadastral.numero = '1231231234';
        phone1.valor_dado_cadastral.tipo = 'Mobile';
        
        Telephone phone2 = new Telephone();
        phone2.id_telefone = '2';
        phone2.valor_dado_cadastral = new TelephoneRegistrationData();
        phone2.valor_dado_cadastral.numero = '9879879876';
        phone2.valor_dado_cadastral.tipo = 'Work';
        
        newLead.telefones = new List<Telephone>{ phone1, phone2 };
        
        // Criando optOutTelefoneResponse
        optOutTelefone optOutTelefoneData = new optOutTelefone();
        optOutTelefoneData.indicador_possui_telefone_bloqueado = 'No';
        
        optOutTelefoneResponse optOutTelefoneResponseData = new optOutTelefoneResponse();
        optOutTelefoneResponseData.data = optOutTelefoneData;
        newLead.optOutTelefone = optOutTelefoneResponseData;

        // 3. Chamar o método que você está testando
        Lead updatedLead = LeadService.createNewLeadToUpdateCPF(newLead, leadCurrent);
        
        // 4. Verificar se os campos do Lead foram atualizados corretamente
        // Verificando FirstName e LastName
        System.assertEquals('NewFirstName', updatedLead.FirstName, 'FirstName should be updated');
        System.assertEquals('NewLastName', updatedLead.LastName, 'LastName should be updated');
        
        // Verificando o Email
        System.assertEquals('newemail@example.com', updatedLead.Email, 'Email should be updated');
        
        // Verificando se o número de telefone foi atribuído corretamente
        System.assertEquals('1231231234', updatedLead.Phone, 'Phone number should be updated');
        System.assertEquals('9879879876', updatedLead.MobilePhone, 'MobilePhone should be updated');
    }
}
