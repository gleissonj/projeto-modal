const file = document.querySelector('input[type="file"]').files[0]; // Obtém o arquivo do input
const sha256 = "abc123"; // Exemplo de SHA-256
const idArquivo = "12345";
const idConteudo = "67890";

const formData = new FormData();
formData.append("arquivo", file);
formData.append("sha256", sha256);
formData.append("idArquivo", idArquivo);
formData.append("idConteudo", idConteudo);

fetch("https://example.com/upload", {
    method: "POST",
    headers: {
        "client_id": "seu-client-id",
        "client_secret": "seu-client-secret",
        "authorization": "Bearer seu-token", 
        // NÃO adicione 'Content-Type': 'multipart/form-data' manualmente, 
        // pois o navegador define automaticamente com o boundary correto.
    },
    body: formData
})
.then(response => response.json())
.then(data => console.log("Sucesso:", data))
.catch(error => console.error("Erro:", error));




GERAR 256


async function generateSHA256FromFile(file) {
    const arrayBuffer = await file.arrayBuffer();
    const hashBuffer = await crypto.subtle.digest("SHA-256", arrayBuffer);
    const hashArray = Array.from(new Uint8Array(hashBuffer));
    return hashArray.map(byte => byte.toString(16).padStart(2, "0")).join("");
}

// Exemplo de uso:
// Suponha que você tenha um input <input type="file" id="fileInput">
document.getElementById("fileInput").addEventListener("change", async (event) => {
    const file = event.target.files[0];
    if (file) {
        const hash = await generateSHA256FromFile(file);
        console.log("SHA-256 do arquivo:", hash);
    }
});
