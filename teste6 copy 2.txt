it('deve baixar o arquivo corretamente quando selectedValue for "EV1"', () => {
  // Espiando o método showMessage para garantir que ele não seja chamado
  const spyShowMessage = jest.spyOn(component, 'showMessage');
  
  // Mock de sucesso no download (simula um Blob vazio)
  multipartUploadService.downloadFileS3.mockReturnValue({
    subscribe: (successCallback: Function) => {
      successCallback(new Blob()); // Simula sucesso com um Blob vazio
    },
  });

  // Configurando selectedValue como "EV1"
  component.selectedValue = 'EV1';

  // Chamando o método que estamos testando
  component.downloadFileMigration();

  // Verificando se window.URL.createObjectURL foi chamado corretamente
  expect(createObjectURLSpy).toHaveBeenCalled();
  
  // Verificando se o link de download foi criado corretamente e clicado
  const linkElement = createElementSpy.mock.results[0].value;
  expect(linkElement.click).toHaveBeenCalled();
  expect(linkElement.download).toBe('EV1.csv'); // Verifica o nome correto do arquivo

  // Verificando se window.URL.revokeObjectURL foi chamado após o clique
  expect(revokeObjectURLSpy).toHaveBeenCalled();
  
  expect(component.loading).toBe(false); // Verifica se o loading foi desmarcado
  expect(spyShowMessage).not.toHaveBeenCalled(); // Não deve chamar showMessage em caso de sucesso
});
