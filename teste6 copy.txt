@isTest
static void testInsertNewLeads() {
    
    // Step 1: Create test Lead data
    Lead lead1 = new Lead(
        FirstName = 'John',
        LastName = 'Doe',
        HU7_CPF__c = '12345678901',
        Company = 'Company 1'
    );
    
    Lead lead2 = new Lead(
        FirstName = 'Jane',
        LastName = 'Doe',
        HU7_CPF__c = '98765432100',
        Company = 'Company 2'
    );
    
    List<Lead> newLeadsToInsert = new List<Lead>{ lead1, lead2 };
    
    // Step 2: Mock repository.insertLeads method
    // To isolate this test, we'll use a mock implementation for repository.insertLeads.
    Test.startTest();
    
    // Execute the method under test
    LeadService.insertNewLeads(newLeadsToInsert);
    
    Test.stopTest();
    
    // Step 3: Assertions
    
    // We don't need to perform a SELECT query here. The leads are already inserted within the transaction.
    
    // Assert that the leads were inserted correctly by checking the size of the list of newLeadsToInsert
    List<Lead> insertedLeads = [SELECT Id, FirstName, LastName, HU7_CPF__c, Company FROM Lead WHERE Id IN :newLeadsToInsert];
    
    // Assert that two leads have been inserted
    System.assertEquals(2, insertedLeads.size(), 'Two leads should be inserted.');
    
    // Validate the inserted leads
    System.assertEquals('John', insertedLeads[0].FirstName, 'First lead should have the correct first name.');
    System.assertEquals('Doe', insertedLeads[0].LastName, 'First lead should have the correct last name.');
    System.assertEquals('12345678901', insertedLeads[0].HU7_CPF__c, 'First lead should have the correct CPF.');
    System.assertEquals('Company 1', insertedLeads[0].Company, 'First lead should have the correct company.');
    
    System.assertEquals('Jane', insertedLeads[1].FirstName, 'Second lead should have the correct first name.');
    System.assertEquals('Doe', insertedLeads[1].LastName, 'Second lead should have the correct last name.');
    System.assertEquals('98765432100', insertedLeads[1].HU7_CPF__c, 'Second lead should have the correct CPF.');
    System.assertEquals('Company 2', insertedLeads[1].Company, 'Second lead should have the correct company.');
}
