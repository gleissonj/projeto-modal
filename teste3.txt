import { TestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { MyService } from './my-service.service'; // Adjust the path to your service
import { HttpClient } from '@angular/common/http';

describe('MyService', () => {
  let service: MyService;
  let httpTestingController: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [MyService],
    });

    service = TestBed.inject(MyService);
    httpTestingController = TestBed.inject(HttpTestingController);
  });

  afterEach(() => {
    httpTestingController.verify(); // Ensure no pending HTTP requests
  });

  it('should call the validaArquivoXls method with the correct body and return response', (done) => {
    // Mock body and response
    const requestBody = {
      NameFunc: 'TestFunc',
      SubNomeFunc: 'TestSubFunc',
      FilePath: '/path/to/file.xls'
    };
    
    const mockResponse = { message: 'File validation success' };

    // Call the method
    service.validaArquivoXls(requestBody).subscribe((response) => {
      expect(response).toEqual(mockResponse); // Assert response
      done();
    });

    // Expect one POST request to the correct URL
    const req = httpTestingController.expectOne(`${service.restApi}/validaArquivoxls`);
    expect(req.request.method).toBe('POST');
    expect(req.request.body).toEqual(requestBody); // Assert body of the request

    // Respond with the mock response
    req.flush(mockResponse);
  });
});
