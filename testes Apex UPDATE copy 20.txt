public class GrupoHandler_Responsaveis {

    public class EntradaGrupo {
        @InvocableVariable(required=true)
        public Account account;  // Input: o próprio Account
    }

    public class ResultadoResponsaveis {
        @InvocableVariable
        public String prompt;  // Apenas o campo final, com a resposta formatada
    }

    @InvocableMethod(label='Buscar responsáveis do grupo (Mockado)')
    public static List<ResultadoResponsaveis> buscarResponsaveis(List<EntradaGrupo> entradas) {
        List<ResultadoResponsaveis> resultados = new List<ResultadoResponsaveis>();

        for (EntradaGrupo entrada : entradas) {
            if (entrada.account == null || entrada.account.Id == null) continue;

            // Simulando como se tivesse consultado o Account
            String grupoNome = 'Grupo Exemplo Nestlé';  // Mockado

            // Criando uma resposta de responsáveis mockada em formato texto (pode ser JSON, ou texto direto)
            String promptFinal = '✅ Responsáveis pelo grupo ' + grupoNome + ':\n\n';
            promptFinal += '1️⃣ Nome: Carlos Menezes\n   Cargo: Officer\n   Região: Sudeste\n   Plataforma: B2B\n\n';
            promptFinal += '2️⃣ Nome: Ana Paula\n   Cargo: Assistente\n   Departamento: Varejo\n   Região: Sudeste\n   Plataforma: B2B\n\n';
            promptFinal += '3️⃣ Nome: João Silva\n   Cargo: Coordenador\n   Departamento: Comercial\n   Região: Nacional\n   Plataforma: B2C';

            ResultadoResponsaveis r = new ResultadoResponsaveis();
            r.prompt = promptFinal;

            resultados.add(r);
        }

        return resultados;
    }
}
