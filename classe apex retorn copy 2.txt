public class GrupoHandler_Contatos_JSON {

    public class Request {
        @InvocableVariable(required=true)
        public String groupName;

        @InvocableVariable(required=true)
        public String codGrupo;
    }

    public class Contato {
        public String nome;
        public String sobrenome;
        public String cpf;
        public String celular;
        public String telefone;
        public String email;
        public String perfil;
        public String cargo;
    }

    public class Response {
        @InvocableVariable
        public String prompt;  // JSON como string
    }

    @InvocableMethod(label='Buscar contatos do grupo (Mockado - JSON)')
    public static List<Response> buscarContatos(List<Request> requests) {
        List<Response> responses = new List<Response>();

        for (Request req : requests) {
            if (String.isBlank(req.groupName) || String.isBlank(req.codGrupo)) continue;

            Map<String, Object> payload = new Map<String, Object>();
            payload.put('grupo_nome', req.groupName);

            List<Contato> listaContatos = new List<Contato>();

            // Contato 1
            Contato contato1 = new Contato();
            contato1.nome = 'Jo√£o';
            contato1.sobrenome = 'da Silva';
            contato1.cpf = '123.456.789-00';
            contato1.celular = '(11) 99999-1234';
            contato1.telefone = '(11) 2345-6789';
            contato1.email = 'joao.silva@nestle.com';
            contato1.perfil = 'Decisor';
            contato1.cargo = 'Gerente de Compras';
            listaContatos.add(contato1);

            // Contato 2
            Contato contato2 = new Contato();
            contato2.nome = 'Maria';
            contato2.sobrenome = 'Oliveira';
            contato2.cpf = '987.654.321-00';
            contato2.celular = '(11) 98888-5678';
            contato2.telefone = '(11) 3456-7890';
            contato2.email = 'maria.oliveira@nestle.com';
            contato2.perfil = 'Influenciador';
            contato2.cargo = 'Coordenadora de Suprimentos';
            listaContatos.add(contato2);

            payload.put('contatos', listaContatos);

            Response r = new Response();
            r.prompt = JSON.serializePretty(payload);

            responses.add(r);
        }

        return responses;
    }
}
