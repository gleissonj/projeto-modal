public static List<AccountContactRelation__c> buscarContatos(List<Request> requisicoes) {
    Set<Id> accountIds = new Set<Id>();
    String nomeFiltro = null;

    for (Request req : requisicoes) {
        if (req.accountId != null) {
            accountIds.add(req.accountId);
        }
        if (!String.isBlank(req.nomeContato)) {
            nomeFiltro = req.nomeContato.trim();
        }
    }

    String nomeFiltroLike = !String.isBlank(nomeFiltro) ? nomeFiltro + '%' : null;

    // Cenário 1: ambos filtros presentes
    if (!accountIds.isEmpty() && !String.isBlank(nomeFiltro)) {
        return [
            SELECT Name, Email__c, Perfil__c, Cargo__c,
                   AccountId__c, AccountId__r.Name, AccountId__r.Hu7IDExterno__c
            FROM AccountContactRelation__c
            WHERE AccountId__c IN :accountIds
              AND Name LIKE :nomeFiltroLike
        ];
    }

    // Cenário 2: apenas filtro por grupo
    if (!accountIds.isEmpty()) {
        return [
            SELECT Name, Email__c, Perfil__c, Cargo__c,
                   AccountId__c, AccountId__r.Name, AccountId__r.Hu7IDExterno__c
            FROM AccountContactRelation__c
            WHERE AccountId__c IN :accountIds
        ];
    }

    // Cenário 3: apenas filtro por nome
    if (!String.isBlank(nomeFiltro)) {
        return [
            SELECT Name, Email__c, Perfil__c, Cargo__c,
                   AccountId__c, AccountId__r.Name, AccountId__r.Hu7IDExterno__c
            FROM AccountContactRelation__c
            WHERE Name LIKE :nomeFiltroLike
        ];
    }

    // Cenário 4: nenhum filtro (proteção extra)
    return new List<AccountContactRelation__c>();
}
