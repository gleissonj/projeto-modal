private static void processApontamento(FS1_ContactSocioResponse apontamento, Id recordTypeId) {
    List<Lead> existingLeads = [SELECT Id FROM Lead WHERE Prospect__c = :recordIdPage AND HU7_Cpf__c = :apontamento.cpf LIMIT 1];

    if (existingLeads.isEmpty()) {
        Lead newLead = new Lead(
            HU7_Cpf__c = apontamento.cpf,
            Email = apontamento.emails.size() == 1 ? apontamento.emails[0].valor_dado_cadastral.email : '',
            MobilePhone = apontamento.telefones.size() == 2 && 
                         (apontamento.optOutTelefone.data.indicador_possui_telefone_bloqueado == 'N' || 
                          apontamento.optOutTelefone.data.indicador_possui_telefone_bloqueado == null) ? 
                         apontamento.telefones[1].valor_dado_cadastral.ddi + 
                         apontamento.telefones[1].valor_dado_cadastral.ddd + 
                         apontamento.telefones[1].valor_dado_cadastral.numero : '',
            FirstName = apontamento.nome,
            LastName = apontamento.nome,
            Phone = apontamento.telefones.size() == 1 && 
                    (apontamento.optOutTelefone.data.indicador_possui_telefone_bloqueado == 'N' || 
                     apontamento.optOutTelefone.data.indicador_possui_telefone_bloqueado == null) ? 
                    apontamento.telefones[0].valor_dado_cadastral.ddi + 
                    apontamento.telefones[0].valor_dado_cadastral.ddd + 
                    apontamento.telefones[0].valor_dado_cadastral.numero : '',
            RecordTypeId = recordTypeId,
            Prospect__c = recordIdPage
        );

        respositoryLead.insertLead(newLead);
    } else {
        Lead existingLead = existingLeads[0];
        existingLead.FirstName = apontamento.nome;
        existingLead.LastName = apontamento.nome;
        existingLead.Phone = apontamento.telefones.size() == 1 && 
                             (apontamento.optOutTelefone.data.indicador_possui_telefone_bloqueado == 'N' || 
                              apontamento.optOutTelefone.data.indicador_possui_telefone_bloqueado == null) ? 
                             apontamento.telefones[0].valor_dado_cadastral.ddi + 
                             apontamento.telefones[0].valor_dado_cadastral.ddd + 
                             apontamento.telefones[0].valor_dado_cadastral.numero : '';
        existingLead.MobilePhone = apontamento.telefones.size() == 2 && 
                                   (apontamento.optOutTelefone.data.indicador_possui_telefone_bloqueado == 'N' || 
                                    apontamento.optOutTelefone.data.indicador_possui_telefone_bloqueado == null) ? 
                                   apontamento.telefones[0].valor_dado_cadastral.ddi + 
                                   apontamento.telefones[0].valor_dado_cadastral.ddd + 
                                   apontamento.telefones[0].valor_dado_cadastral.numero : '';
        RecordTypeId = recordTypeId;
        existingLead.Email = apontamento.emails.size() == 1 ? 
                             apontamento.emails[0].valor_dado_cadastral.email : '';
        existingLead.HU7_Cpf__c = apontamento.cpf;

        repositoryLead.updateLead(existingLead);
    }
}
