import { LightningElement } from 'lwc';

export default class ModalTabelaComSelecao extends LightningElement {
    isModalOpen = false; // Controla a visibilidade do modal

    // Dados iniciais com selectedOption vazio
    data = [
        { id: '1', name: 'John Doe', selectedOption: '' },
        { id: '2', name: 'Jane Doe', selectedOption: '' }
    ];

    // Opções do combobox
    options = [
        { label: 'Opção 1', value: 'Opção 1' },
        { label: 'Opção 2', value: 'Opção 2' },
        { label: 'Opção 3', value: 'Opção 3' },
        { label: 'Opção 4', value: 'Opção 4' }
    ];

    // Abre o modal
    openModal() {
        this.isModalOpen = true;
    }

    // Fecha o modal
    closeModal() {
        this.isModalOpen = false;
    }

    // Função chamada quando o valor do select é alterado
    handleSelectChange(event) {
        const rowId = event.target.dataset.id;
        const selectedValue = event.target.value;

        // Encontre a linha pelo id e atualize o valor selecionado
        const index = this.data.findIndex(row => row.id === rowId);
        if (index !== -1) {
            this.data[index].selectedOption = selectedValue;
        }
    }

    // Função chamada quando o botão "Confirmar" é clicado
    handleConfirm() {
        console.log('Seleções confirmadas:', JSON.stringify(this.data));
        this.closeModal();  // Fechar o modal após confirmar
    }
}
