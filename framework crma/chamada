import io.opentelemetry.api.GlobalOpenTelemetry;
import io.opentelemetry.api.trace.Span;
import io.opentelemetry.api.trace.Tracer;
import io.opentelemetry.context.Scope;

import java.io.File;
import java.util.logging.Logger;

public class DatasetCreator implements IDatasetCreator {

    private final Logger logger = Logger.getLogger(DatasetCreator.class.getName());
    private static final Tracer tracer = GlobalOpenTelemetry.getTracer("dataset-creator");

    public void upload(File aMetadataJson, MensagemFila mensagemFila) {
        // Inicia o span
        Span span = tracer.spanBuilder("dataset.upload").startSpan();

        // Abre o contexto do span
        try (Scope scope = span.makeCurrent()) {
            // Adiciona o atributo "email"
            LogUtils.adicionarObjetoLog(mensagemFila);

            // ---- Sua lógica original aqui ----
            sql.client.delete(builder -> builder.queueUrl(queueUrl));
            // -----------------------------------

        } catch (Exception e) {
            // Log com correlação ao span
            logger.severe("Erro ao subir arquivo: " + e.getMessage());

            // (Opcional) adiciona erro ao span para visibilidade no trace
            span.recordException(e);
            span.setStatus(io.opentelemetry.api.trace.StatusCode.ERROR);
        } finally {
            // Fecha o span e o SQS
            span.end();
            sqsClient.close();
        }
    }
}
