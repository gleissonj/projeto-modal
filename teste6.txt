import { YourComponent } from './your-component.component';

describe('YourComponent - getValueNameOperation', () => {
  let component: YourComponent;

  beforeEach(() => {
    component = new YourComponent();
  });

  it('deve retornar o nome antes do primeiro ponto no arquivo', () => {
    const fileName = 'example.txt';
    const result = component.getValueNameOperation(fileName);
    expect(result).toBe('example');
  });

  it('deve retornar o nome inteiro se não houver ponto', () => {
    const fileName = 'example';
    const result = component.getValueNameOperation(fileName);
    expect(result).toBe('example');
  });

  it('deve retornar uma string vazia se o nome começar com um ponto', () => {
    const fileName = '.hiddenfile';
    const result = component.getValueNameOperation(fileName);
    expect(result).toBe('');
  });

  it('deve retornar o nome antes do primeiro ponto, ignorando os subsequentes', () => {
    const fileName = 'example.tar.gz';
    const result = component.getValueNameOperation(fileName);
    expect(result).toBe('example');
  });

  it('deve lidar com valores indefinidos ou nulos', () => {
    expect(component.getValueNameOperation(undefined)).toBeUndefined();
    expect(component.getValueNameOperation(null)).toBeNull();
  });

  it('deve lidar com strings vazias', () => {
    const fileName = '';
    const result = component.getValueNameOperation(fileName);
    expect(result).toBe('');
  });
});
