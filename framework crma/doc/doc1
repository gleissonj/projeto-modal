# üìò Documenta√ß√£o do Framework CRMA

## 1. Vis√£o Geral

O **Framework CRMA** √© um conjunto de servi√ßos na **AWS** respons√°vel por realizar a **carga de dados no CRM Analytics (CRMA) da Salesforce**, sob propriedade da conta **KN8**.  
O objetivo principal √© permitir a inser√ß√£o de datasets no CRMA de forma **padronizada, automatizada e segura**.

O framework utiliza:

- **API Gateway** ‚Üí respons√°vel por expor o endpoint de entrada.  
- **Amazon SQS** ‚Üí respons√°vel por orquestrar as mensagens enviadas pelos usu√°rios.  
- **Amazon ECS** ‚Üí realiza o processamento das mensagens, faz a valida√ß√£o, leitura dos arquivos e executa a carga de dados no Salesforce CRMA.  

---

## 2. Fluxo de Opera√ß√£o

1. O usu√°rio que deseja utilizar o framework deve chamar o **endpoint interno da API**.  
2. O payload (JSON) deve conter **obrigatoriamente** os seguintes campos:  

```json
{
  "nome_dataset": "nomeDoSeuDataset",
  "nome_app": "nomeDoSeuApp",
  "url_arquivo_dados": "suaUrlPreAssinadaQueContemOzipDeDados",
  "url_arquivo_metadados": "suaUrlPreAssinadaQueContemOJsondeMetadados",
  "squad_responsavel": "nomeDaSuaSquad",
  "operacao": "Overwrite"
}
```

‚ö†Ô∏è **Todos os campos s√£o obrigat√≥rios.**

---

## 3. Descri√ß√£o dos Campos

- **nome_dataset**: Nome do dataset que ser√° criado/atualizado no CRMA.  
- **nome_app**: Nome do aplicativo no qual o dataset ser√° armazenado.  
- **url_arquivo_dados**: URL pr√©-assinada do **arquivo ZIP** contendo os dados a serem carregados.  
- **url_arquivo_metadados**: URL pr√©-assinada do **arquivo JSON** com os metadados do dataset.  
- **squad_responsavel**: Nome da squad respons√°vel pela carga.  
- **operacao**: Tipo de opera√ß√£o de carga.  
  - `overwrite`: substitui completamente os dados existentes no dataset.  
  - `append`: adiciona novos dados ao dataset existente.  

---

## 4. Como Utilizar o Framework

### 4.1 Autentica√ß√£o
Para chamar a API √© necess√°rio possuir um **token STS interno**.

- URLs do STS dispon√≠veis:
  - **DEV** ‚Üí [www.devsts.com.br](http://www.devsts.com.br)  
  - **HOM** ‚Üí [www.homsts.com.br](http://www.homsts.com.br)  
  - **PRD** ‚Üí [www.sts.com.br](http://www.sts.com.br)  

O token deve conter o **escopo**:  
```
framework.write.teste
```

Esse escopo precisa estar associado ao **Client ID** do solicitante.

---

### 4.2 Requisi√ß√£o

- **M√©todo HTTP**: `POST`  
- **Endpoint**: `https://{api-gateway-host}/crma/upload` *(interno)*  
- **Headers obrigat√≥rios**:
  - `Authorization: Bearer {TOKEN_STS}`
  - `Content-Type: application/json`

---

## 5. Exemplo de Requisi√ß√£o

```bash
curl -X POST https://{api-gateway-host}/crma/upload -H "Authorization: Bearer eyJhbGciOi..." -H "Content-Type: application/json" -d '{
  "nome_dataset": "vendas_2025",
  "nome_app": "analise_comercial",
  "url_arquivo_dados": "https://s3.amazonaws.com/bucket/arquivo_dados.zip?X-Amz-Signature=...",
  "url_arquivo_metadados": "https://s3.amazonaws.com/bucket/metadados.json?X-Amz-Signature=...",
  "squad_responsavel": "squad_dataops",
  "operacao": "append"
}'
```

---

## 6. Fluxo Resumido

1. Usu√°rio obt√©m o **token STS** v√°lido.  
2. Realiza chamada ao **endpoint do API Gateway** com o payload obrigat√≥rio.  
3. Mensagem √© enfileirada no **SQS**.  
4. **ECS** processa a mensagem:  
   - Baixa arquivos do S3 a partir das URLs pr√©-assinadas.  
   - Valida os arquivos (estrutura de dados e metadados).  
   - Executa a carga dos dados no **CRMA Salesforce**.  
5. Retorna logs e status da execu√ß√£o.  

---

## 7. Pr√≥ximos Passos

- üìå Adicionar **exemplo de resposta da API**.  
- üìå Criar **diagrama de arquitetura**.  
- üìå Definir **tratamento de erros**.  
- üìå Documentar **monitoramento no Datadog**.  

---

## 8. Exemplo de Resposta da API

```json
{
  "SendMessageResponse": {
    "ResponseMetadata": {
      "RequestId": "43424242423"
    },
    "SendMessageResult": {
      "MD5OfMessageAttributes": null,
      "MD5OfMessageBody": "dfsdfsfsd",
      "MD5OfMessageSystemAttributes": null,
      "MessageId": "3242342342",
      "SequenceNumber": "4242423423"
    }
  }
}
```

‚ö†Ô∏è Esta resposta **n√£o significa que a carga foi conclu√≠da**, apenas que a mensagem foi publicada com sucesso na fila SQS para processamento posterior pelo ECS.  

---

## 9. Diagrama de Arquitetura

üîó [Clique aqui para visualizar o desenho da arquitetura](http://desenhoArquiteutra)

---

## 10. Tratamento de Erros

### Poss√≠veis Erros
- **URL pr√©-assinada inv√°lida ou expirada**  
- **Nome do App n√£o encontrado na Salesforce**  
- **Arquivo JSON de metadados inv√°lido**  
- **Opera√ß√£o inv√°lida (diferente de overwrite/append)**  
- **Falha de autentica√ß√£o com o CRMA (Salesforce)**  

### A√ß√£o em Caso de Erro
- Erros s√£o registrados no **Datadog**.  
- O **monitor de alertas** abre automaticamente um incidente.  
- O incidente √© atribu√≠do √† **squad respons√°vel** informada em `squad_responsavel`.  

---

## 11. Monitoramento no Datadog

### Logs
- Os logs s√£o centralizados no **painel de logs**.  
- Para consultar, deve-se buscar pelo servi√ßo:  
  ```
  service:service-framework-crma
  ```
- Exemplos de consultas comuns:  
  - `service:service-framework-crma AND level:error` ‚Üí somente erros.  
  - `service:service-framework-crma AND squad_responsavel:squad_dataops` ‚Üí erros filtrados por squad.  

### Monitores e Incidentes
- Detectam falhas cr√≠ticas como:  
  - Erros em URLs pr√©-assinadas.  
  - Erros de payload/metadados.  
  - Falhas na integra√ß√£o com CRMA.  
- Cada incidente aberto √© atribu√≠do √† **squad informada no payload**.  

---

## 12. Uso de URLs Pr√©-Assinadas

### Por que utilizamos URLs Pr√©-Assinadas?
O servi√ßo do framework CRMA roda na conta **KN8**.  
Os times consumidores utilizam **outras contas AWS**.  

Por **quest√µes de governan√ßa e seguran√ßa**, n√£o √© permitido o consumo direto de dados via **cross-account**.  
Por isso:  
- Cada time deve gerar **URLs pr√©-assinadas** dos seus arquivos.  
- Essas URLs s√£o enviadas no payload da requisi√ß√£o.  
- O framework consome os arquivos temporariamente de forma segura.  

### Tempo de Expira√ß√£o
- **M√≠nimo recomendado**: **3 horas**.  
- Isso garante tempo suficiente para:  
  - Leitura da mensagem pelo ECS.  
  - Download e valida√ß√£o dos arquivos.  
  - Execu√ß√£o da carga no CRMA.  

### Benef√≠cios
- üîí Seguran√ßa ‚Üí acesso tempor√°rio e controlado.  
- üèóÔ∏è Isolamento ‚Üí sem depend√™ncia de cross-account.  
- ‚ö° Flexibilidade ‚Üí cada squad controla seus arquivos.  
- üìë Governan√ßa ‚Üí alinhado com boas pr√°ticas AWS.  

---



#### Hosts por ambiente

| Ambiente | Host (base)                                              | Observa√ß√£o                     |
| -------- | -------------------------------------------------------- | ------------------------------ |
| DEV      | `https://abc123.execute-api.sa-east-1.amazonaws.com/dev` | Invoke URL (sem custom domain) |
| HOM      | `https://def456.execute-api.sa-east-1.amazonaws.com/hom` | ‚Äî                              |
| PRD      | `https://api-crma.kn8.corp/prd`                          | Custom domain + base path      |

---






# 13. FAQ (Perguntas Frequentes)

- **Posso utilizar esse framework para realizar cargas em objetos da Salesforce?**  
  N√£o. O framework √© exclusivo para datasets do CRMA, n√£o para objetos da Salesforce.  

- **Qual o tamanho m√°ximo dos arquivos que posso enviar?**  
  Recomendamos at√© **5 GB** por arquivo de dados.  

- **Quanto tempo a URL pr√©-assinada deve permanecer v√°lida?**  
  No m√≠nimo **3 horas**.  

- **Quem devo acionar em caso de erro no processamento?**  
  Consulte os logs no Datadog com `service:service-framework-crma`.  

- **O framework realiza retries automaticamente?**  
  Sim, para erros tempor√°rios. Payload inv√°lido ou URL expirada n√£o s√£o reprocessados.  

- **Quais tipos de opera√ß√£o de carga s√£o suportados?**  
  `overwrite`, `append`, `upsert`.  

- **Posso usar o framework em ambientes DEV, HOM e PRD?**  
  Sim, cada ambiente tem seu host espec√≠fico no API Gateway.
