import { MyComponent } from './MyComponent'; // Supondo que você tenha uma classe que contém o método updateSorting

describe('MyComponent', () => {
  let component: MyComponent;

  beforeEach(() => {
    component = new MyComponent();
    component.getGruposUser = ['group1', 'group2']; // Exemplo de dados de grupos
    component.permissionsDownloadBicketS3 = ['group1']; // Apenas group1 tem permissão para BicketS3
    component.permissionsDownloadEvs = ['group2']; // Apenas group2 tem permissão para Evs
  });

  it('deve atualizar typeFunc quando o usuário tem permissão para BicketS3 e selectedIndex é 1', () => {
    const event = { selectedIndex: 1 };
    component.updateSorting(event); // Chama a função original
    expect(component.typeFunc).toBe(1); // Verifica se typeFunc foi atualizado para 1
  });

  it('deve exibir a mensagem de erro quando o usuário não tem permissão para BicketS3 e selectedIndex é 1', () => {
    const event = { selectedIndex: 1 };
    component.getGruposUser = ['group2']; // Agora, o group2 não tem permissão para BicketS3
    const spy = jest.spyOn(component, 'showMessage'); // Espiona a função showMessage
    component.updateSorting(event); // Chama a função original
    expect(spy).toHaveBeenCalledWith('Você precisa de permissão para acessar essa funcionalidade. Entre em contato com o ADM', 'error');
  });

  it('deve atualizar typeFunc quando o usuário tem permissão para Evs e selectedIndex é 2', () => {
    const event = { selectedIndex: 2 };
    component.updateSorting(event); // Chama a função original
    expect(component.typeFunc).toBe(2); // Verifica se typeFunc foi atualizado para 2
  });

  it('deve exibir a mensagem de erro quando o usuário não tem permissão para Evs e selectedIndex é 2', () => {
    const event = { selectedIndex: 2 };
    component.getGruposUser = ['group1']; // Agora, o group1 não tem permissão para Evs
    const spy = jest.spyOn(component, 'showMessage'); // Espiona a função showMessage
    component.updateSorting(event); // Chama a função original
    expect(spy).toHaveBeenCalledWith('Você precisa de permissão para acessar essa funcionalidade. Entre em contato com o ADM', 'error');
  });

  it('deve atualizar typeFunc para outros valores de selectedIndex', () => {
    const event = { selectedIndex: 3 }; // Outro valor de selectedIndex
    component.updateSorting(event); // Chama a função original
    expect(component.typeFunc).toBe(3); // Verifica se typeFunc foi atualizado para 3
  });
});
