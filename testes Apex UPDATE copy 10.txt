import { TestBed, ComponentFixture } from '@angular/core/testing';
import { YourComponent } from './your-component';
import { MsalService, MSAL_GUARD_CONFIG } from '@azure/msal-angular';

describe('YourComponent - login()', () => {
  let component: YourComponent;
  let fixture: ComponentFixture<YourComponent>;
  let authServiceMock: any;

  beforeEach(() => {
    const mockAuthRequest = {
      scopes: ['user.read'],
      extraQueryParameters: { prompt: 'select_account' }
    };

    authServiceMock = {
      loginRedirect: jest.fn()
    };

    TestBed.configureTestingModule({
      declarations: [YourComponent],
      providers: [
        { provide: MsalService, useValue: authServiceMock },
        { provide: MSAL_GUARD_CONFIG, useValue: { authRequest: mockAuthRequest } }
      ]
    });

    fixture = TestBed.createComponent(YourComponent);
    component = fixture.componentInstance;
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  it('deve chamar loginRedirect com authRequest quando definido', () => {
    component.login();

    expect(authServiceMock.loginRedirect).toHaveBeenCalledWith(expect.objectContaining({
      scopes: ['user.read'],
      extraQueryParameters: { prompt: 'select_account' }
    }));
  });

  it('deve chamar loginRedirect sem parâmetros quando authRequest não está definido', () => {
    // Altera a configuração manualmente
    component.msalGuardConfig.authRequest = undefined;

    component.login();

    expect(authServiceMock.loginRedirect).toHaveBeenCalledWith();
  });
});
