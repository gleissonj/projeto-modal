import { LightningElement, track  } from 'lwc';

const COLUMNS = [
    { label: 'Nome', fieldName: 'name', type: 'text' },
    { label: 'CPF', fieldName: 'id', type: 'text' },
    { label: 'Ação', type: 'button', typeAttributes: { 
        label: 'Ver Detalhes', 
        name: 'viewDetails', 
        variant: 'brand' 
    }}
];



export default class SearchApontamento extends LightningElement {
    @track isRowModalOpen = false;
    @track isConfirmModalOpen = false;
    @track selectedRow = {};
    @track selectedRows = [];

    data = [
        { id: '1', name: 'João' },
        { id: '2', name: 'Maria' },
        { id: '3', name: 'Carlos' }
    ];

    columns = COLUMNS;

    get isConfirmButtonDisabled() {
        return this.selectedRows.length === 0;
    }

    handleRowSelection(event) {
        this.selectedRows = event.detail.selectedRows;
    }

    handleRowAction(event) {
        const actionName = event.detail.action.name;
        const row = event.detail.row;

        if (actionName === 'viewDetails') {
            this.selectedRow = row;
            this.isRowModalOpen = true;
        }
    }

    openConfirmModal() {
        if (this.selectedRows.length > 0) {
            this.isConfirmModalOpen = true;
        }
    }

    closeRowModal() {
        this.isRowModalOpen = false;
    }

    closeConfirmModal() {
        this.isConfirmModalOpen = false;
    }

    handleConfirmSelection() {
        this.openConfirmModal();
    }
    
}