@IsTest
private class HU7_GetContactDetailsByInfo_V1_Test {

    static Id grupoId;
    static Id contatoId;

    @TestSetup
    static void setup() {
        // Criar o Grupo Econômico (Account)
        Account grupo = new Account(Name = 'Grupo Econômico Teste');
        insert grupo;
        grupoId = grupo.Id;

        // Criar o Contato (Private Contact, sem AccountId)
        Contact contato = new Contact(
            FirstName = 'Maria',
            LastName = 'Souza',
            Email = 'maria.souza@teste.com',
            Hu7_CPF__c = '98765432100'
        );
        insert contato;
        contatoId = contato.Id;

        // Criar manualmente a relação AccountContactRelation__c com os campos usados na Apex
        // AccountContactRelation__c rel = new AccountContactRelation__c(
        //     ContactId__c = contato.Id,
        //     AccountId__c = grupo.Id,
        //     Email__c = 'maria.souza@teste.com',
        //     Phone__c = '11999998888',
        //     CPF__c = '98765432100'
        // );
        // insert rel;
    }

    @IsTest
    static void test_ContatoPorNome() {
        List<HU7_GetContactDetailsByInfo_V1.Request> requests = new List<HU7_GetContactDetailsByInfo_V1.Request>();
        HU7_GetContactDetailsByInfo_V1.Request req = new HU7_GetContactDetailsByInfo_V1.Request();
        req.contactName = 'Maria';
        requests.add(req);

        Test.startTest();
        List<HU7_GetContactDetailsByInfo_V1.Response> responses = HU7_GetContactDetailsByInfo_V1.getDetailsContact(requests);
        Test.stopTest();

        System.assertEquals(1, responses.size(), 'Deveria retornar uma resposta');
        System.assert(responses[0].Prompt.contains('Maria Souza'), 'Prompt deveria conter o nome do contato');
        System.assert(responses[0].Prompt.contains('Grupo Econômico Teste'), 'Prompt deveria conter o grupo econômico');
    }

    @IsTest
    static void test_ContatoPorEmail() {
        List<HU7_GetContactDetailsByInfo_V1.Request> requests = new List<HU7_GetContactDetailsByInfo_V1.Request>();
        HU7_GetContactDetailsByInfo_V1.Request req = new HU7_GetContactDetailsByInfo_V1.Request();
        req.contactEmail = 'maria.souza';
        requests.add(req);

        Test.startTest();
        List<HU7_GetContactDetailsByInfo_V1.Response> responses = HU7_GetContactDetailsByInfo_V1.getDetailsContact(requests);
        Test.stopTest();

        System.assertEquals(1, responses.size(), 'Deveria retornar uma resposta por email');
        System.assert(responses[0].Prompt.contains('Maria Souza'), 'Prompt deveria conter o nome do contato');
    }

    @IsTest
    static void test_ContatoPorCPF() {
        List<HU7_GetContactDetailsByInfo_V1.Request> requests = new List<HU7_GetContactDetailsByInfo_V1.Request>();
        HU7_GetContactDetailsByInfo_V1.Request req = new HU7_GetContactDetailsByInfo_V1.Request();
        req.contactCPF = '98765432100';
        requests.add(req);

        Test.startTest();
        List<HU7_GetContactDetailsByInfo_V1.Response> responses = HU7_GetContactDetailsByInfo_V1.getDetailsContact(requests);
        Test.stopTest();

        System.assertEquals(1, responses.size(), 'Deveria retornar uma resposta por CPF');
        System.assert(responses[0].Prompt.contains('Maria Souza'), 'Prompt deveria conter o nome do contato');
    }

    @IsTest
    static void test_ContatoNaoEncontrado() {
        List<HU7_GetContactDetailsByInfo_V1.Request> requests = new List<HU7_GetContactDetailsByInfo_V1.Request>();
        HU7_GetContactDetailsByInfo_V1.Request req = new HU7_GetContactDetailsByInfo_V1.Request();
        req.contactName = 'Inexistente';
        requests.add(req);

        Test.startTest();
        List<HU7_GetContactDetailsByInfo_V1.Response> responses = HU7_GetContactDetailsByInfo_V1.getDetailsContact(requests);
        Test.stopTest();

        System.assertEquals(1, responses.size(), 'Deveria retornar uma resposta');
        System.assert(responses[0].Prompt.contains('Nenhum contato encontrado'), 'Deveria retornar mensagem de contato não encontrado');
    }

    @IsTest
    static void test_RequestCamposNulos() {
        List<HU7_GetContactDetailsByInfo_V1.Request> requests = new List<HU7_GetContactDetailsByInfo_V1.Request>();
        HU7_GetContactDetailsByInfo_V1.Request req = new HU7_GetContactDetailsByInfo_V1.Request();
        requests.add(req);

        Test.startTest();
        List<HU7_GetContactDetailsByInfo_V1.Response> responses = HU7_GetContactDetailsByInfo_V1.getDetailsContact(requests);
        Test.stopTest();

        System.assertEquals(0, responses.size(), 'Sem filtros, a resposta deveria ser vazia');
    }

    @IsTest
    static void test_RequestListaVazia() {
        List<HU7_GetContactDetailsByInfo_V1.Request> requests = new List<HU7_GetContactDetailsByInfo_V1.Request>();

        Test.startTest();
        List<HU7_GetContactDetailsByInfo_V1.Response> responses = HU7_GetContactDetailsByInfo_V1.getDetailsContact(requests);
        Test.stopTest();

        System.assertEquals(0, responses.size(), 'Lista de requests vazia, resposta deveria ser vazia');
    }
}
