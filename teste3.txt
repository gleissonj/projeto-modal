import { ComponentFixture, TestBed } from '@angular/core/testing';
import { MyComponent } from './my-component.component'; // Adjust the path as necessary

describe('MyComponent', () => {
  let component: MyComponent;
  let fixture: ComponentFixture<MyComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      declarations: [MyComponent]
    }).compileComponents();

    fixture = TestBed.createComponent(MyComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should return substring before period when period is present', () => {
    // Arrange
    const input = 'operation.txt';

    // Act
    const result = component.getValueNameOperation(input);

    // Assert
    expect(result).toBe('operation');
  });

  it('should return undefined when there is no period in the string', () => {
    // Arrange
    const input = 'operationTxt';

    // Act
    const result = component.getValueNameOperation(input);

    // Assert
    expect(result).toBeUndefined();
  });

  it('should return undefined for empty string', () => {
    // Arrange
    const input = '';

    // Act
    const result = component.getValueNameOperation(input);

    // Assert
    expect(result).toBeUndefined();
  });

  it('should handle null or undefined input gracefully', () => {
    // Act & Assert
    expect(component.getValueNameOperation(null)).toBeUndefined();
    expect(component.getValueNameOperation(undefined)).toBeUndefined();
  });
});
