public class GrupoHandler {

    public class EntradaGrupo {
        @InvocableVariable(required=true)
        public String grupo_nome;

        @InvocableVariable(required=true)
        public String tipo_info;
    }

    public class CNPJPorSubgrupo {
        @InvocableVariable
        public String cnpj;

        @InvocableVariable
        public String tipo; // Exemplo: 'Cabe√ßa' ou 'Raiz'
    }

    public class SubgrupoComCNPJs {
        @InvocableVariable
        public String nome_subgrupo;

        @InvocableVariable
        public List<CNPJPorSubgrupo> cnpjs_do_subgrupo;
    }

    public class ResultadoGrupo {
        @InvocableVariable
        public String grupo_nome;

        @InvocableVariable
        public String tipo_info;

        @InvocableVariable
        public String cnpj;

        @InvocableVariable
        public String endereco;

        @InvocableVariable
        public List<String> contatos;

        @InvocableVariable
        public List<String> responsaveis;

        @InvocableVariable
        public List<SubgrupoComCNPJs> subgrupos;
    }

    @InvocableMethod(label='Buscar informa√ß√µes de grupo para Prompt Template')
    public static List<ResultadoGrupo> buscar(List<EntradaGrupo> entradas) {
        List<ResultadoGrupo> resultados = new List<ResultadoGrupo>();

        for (EntradaGrupo entrada : entradas) {
            ResultadoGrupo r = new ResultadoGrupo();
            r.grupo_nome = entrada.grupo_nome;
            r.tipo_info = entrada.tipo_info != null ? entrada.tipo_info.toLowerCase() : '';

            // üîß Dados mockados ‚Äì Ajuste depois com queries reais
            r.cnpj = '12.345.678/0001-00';
            r.endereco = 'Av. Paulista, 1000 - S√£o Paulo/SP';

            // Contatos
            r.contatos = new List<String>{
                'Jo√£o da Silva ‚Äì (11) 99999-0001 ‚Äì joao@nestle.com',
                'Maria Souza ‚Äì (11) 98888-0002 ‚Äì maria@nestle.com'
            };

            // Respons√°veis
            r.responsaveis = new List<String>{
                'Carlos Menezes (Officer) ‚Äì Regi√£o Sudeste ‚Äì Plataforma B2B',
                'Ana Paula (Assistente) ‚Äì Segmento Varejo'
            };

            // Subgrupos
            List<SubgrupoComCNPJs> listaSubgrupos = new List<SubgrupoComCNPJs>();

            // Subgrupo 1: Nestl√© Alimentos
            List<CNPJPorSubgrupo> cnpjsAlimentos = new List<CNPJPorSubgrupo>();
            CNPJPorSubgrupo cnpj1 = new CNPJPorSubgrupo();
            cnpj1.cnpj = '12.345.678/0001-00';
            cnpj1.tipo = 'Cabe√ßa';
            cnpjsAlimentos.add(cnpj1);

            CNPJPorSubgrupo cnpj2 = new CNPJPorSubgrupo();
            cnpj2.cnpj = '23.456.789/0001-11';
            cnpj2.tipo = 'Raiz';
            cnpjsAlimentos.add(cnpj2);

            SubgrupoComCNPJs alimentos = new SubgrupoComCNPJs();
            alimentos.nome_subgrupo = 'Nestl√© Alimentos';
            alimentos.cnpjs_do_subgrupo = cnpjsAlimentos;
            listaSubgrupos.add(alimentos);

            // Subgrupo 2: Nestl√© Bebidas
            List<CNPJPorSubgrupo> cnpjsBebidas = new List<CNPJPorSubgrupo>();
            CNPJPorSubgrupo cnpj3 = new CNPJPorSubgrupo();
            cnpj3.cnpj = '34.567.890/0001-22';
            cnpj3.tipo = 'Cabe√ßa';
            cnpjsBebidas.add(cnpj3);

            CNPJPorSubgrupo cnpj4 = new CNPJPorSubgrupo();
            cnpj4.cnpj = '45.678.901/0001-33';
            cnpj4.tipo = 'Raiz';
            cnpjsBebidas.add(cnpj4);

            SubgrupoComCNPJs bebidas = new SubgrupoComCNPJs();
            bebidas.nome_subgrupo = 'Nestl√© Bebidas';
            bebidas.cnpjs_do_subgrupo = cnpjsBebidas;
            listaSubgrupos.add(bebidas);

            r.subgrupos = listaSubgrupos;

            resultados.add(r);
        }

        return resultados;
    }
}