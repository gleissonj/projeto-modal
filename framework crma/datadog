<dependency>
    <groupId>com.datadoghq</groupId>
    <artifactId>dd-opentelemetry-auto-instrumentation</artifactId>
    <version>1.32.0</version> <!-- ou vers√£o mais recente -->
</dependency>




ENTRYPOINT ["java",
  "-javaagent:/app/dd-java-agent.jar",
  "-Ddd.service=microservice-app",
  "-Ddd.env=homolog",                      # ambiente (opcional mas recomendado)
  "-Ddd.version=1.0",                      # vers√£o do servi√ßo (opcional)
  "-Ddd.logs.injection=true",             # para logs com trace_id
  "-Dotel.instrumentation.enabled=true",  # ‚úÖ necess√°rio
  "-Dotel.experimental.sdk.enabled=true", # ‚úÖ importante p/ spans customizados
  "-Dotel.javaagent.debug=false",         # opcional para debug
  "-jar", "app.jar"]



<!-- API do SLF4J -->
<dependency>
  <groupId>org.slf4j</groupId>
  <artifactId>slf4j-api</artifactId>
  <version>2.0.9</version>
</dependency>

<!-- Implementa√ß√£o: Logback --

<dependency>
  <groupId>ch.qos.logback</groupId>
  <artifactId>logback-classic</artifactId>
  <version>1.4.11</version>
</dependency>



package br.teste.app;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.slf4j.MDC;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class ServiceExceptionAspect {

    private static final Logger logger = LoggerFactory.getLogger(ServiceExceptionAspect.class);

    /**
     * Adiciona atributos como `email`, `usuario`, etc. ao MDC (para logs do Datadog)
     */
    public static void adicionarObjetoLog(String nomeTag, String valorTag) {
        MDC.put(nomeTag, valorTag); // ‚úÖ Isso ser√° capturado como Event Attribute
    }

    /**
     * Envolve qualquer m√©todo anotado e loga exce√ß√µes com contexto do MDC
     */
    @Around("@annotation(br.teste.app.annotations.Loggable)") // ou adapte para o seu ponto de corte
    public Object catchServiceException(ProceedingJoinPoint joinPoint) throws Throwable {
        try {
            return joinPoint.proceed();

        } catch (Exception ex) {
            logger.error("Exce√ß√£o em {}.{}: {}",
                joinPoint.getSignature().getDeclaringTypeName(),
                joinPoint.getSignature().getName(),
                ex.getMessage(), ex);

            throw new RuntimeException("Erro no service", ex);

        } finally {
            MDC.clear(); // üßº limpa o contexto para evitar vazamento em outras threads
        }
    }
}




na sexta estava vendo a quest√£o do incidente
falei com o Edu e o david
estava ttbm conhecendo a lambda q faz esse processo

tive com com o time do Edgar 
investigando um registro q deu erro em uma carga q eles estavam subindo 


continuei trabalhando 
abri um chamado para o time do datadog, pq o event atributes n√£o estava caindo 
encontrei um caso parecido com o meu no colaboratech falei om o rapaz e ele teve q abrir um chamado para o time do datadog msm
hoje o chamado j√° esta sendo resolvido

oq √© um pouco chato, √© q cada modifica√ß√£o q fa√ßo tenho q subir na esteira o ecs, e demora um pouquinho 


aws sts assume-role --role-arn arn:aws:iam::ACCOUNT_ID:role/NOME_DA_ROLE_DO_LAMBDA --role-session-name test
aws s3api get-object --bucket SEU_BUCKET --key CAMINHO/ARQUIVO /tmp/teste
