import boto3
import csv
import io

def lambda_handler(event, context):
    bucket = 'meu-bucket-exemplo'
    key = 'caminho/para/arquivo.csv'

    s3 = boto3.client('s3')

    try:
        response = s3.get_object(Bucket=bucket, Key=key)
        content = response['Body'].read().decode('utf-8')
        csv_file = io.StringIO(content)

        reader = csv.DictReader(csv_file)

        linhas = []
        for row in reader:
            # Cada 'row' é um dicionário com nome das colunas como chave
            print(f"Nome: {row['nome']}, Idade: {row['idade']}")
            linhas.append(row)

        # Exemplo: acessar a 3ª linha
        terceira_linha = linhas[2] if len(linhas) >= 3 else None
        if terceira_linha:
            print("Terceira linha completa:", terceira_linha)
            print("Valor da coluna 'email':", terceira_linha.get('email'))

        return {
            'statusCode': 200,
            'body': f'{len(linhas)} linhas lidas com sucesso'
        }

    except Exception as e:
        print(f"Erro ao ler CSV do S3: {e}")
        return {
            'statusCode': 500,
            'body': f'Erro: {str(e)}'
        }



from moto import mock_s3
import boto3
import pytest
from lambda_function import lambda_handler  # importa a função como está

@mock_s3
def test_lambda_handler_csv_s3_sucesso():
    # Arrange: cria bucket e arquivo CSV mockado no S3
    s3 = boto3.client('s3', region_name='us-east-1')
    bucket = 'meu-bucket-exemplo'
    key = 'caminho/para/arquivo.csv'
    csv_conteudo = (
        "nome,idade,email\n"
        "João,30,joao@email.com\n"
        "Maria,25,maria@email.com\n"
        "Carlos,28,carlos@email.com\n"
    )

    s3.create_bucket(Bucket=bucket)
    s3.put_object(Bucket=bucket, Key=key, Body=csv_conteudo)

    # Act: chama o handler como a Lambda faria
    event = {}  # mesmo que vazio, já que a função não usa
    context = None
    resultado = lambda_handler(event, context)

    # Assert
    assert resultado['statusCode'] == 200
    assert '3 linhas lidas' in resultado['body']



@mock_s3
def test_lambda_handler_csv_s3_erro():
    # Bucket existe, mas o arquivo não
    s3 = boto3.client('s3', region_name='us-east-1')
    s3.create_bucket(Bucket='meu-bucket-exemplo')

    resultado = lambda_handler({}, None)

    assert resultado['statusCode'] == 500
    assert 'Erro' in resultado['body']
