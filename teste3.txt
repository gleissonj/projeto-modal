%dw 2.0
import * from dw::core::Binaries
output application/octet-stream
var base64String = "eyJuYW1lIjogInRlc3RlIn0="
---
fromBase64(base64String as String) as Binary 



%dw 2.0
import fromBase64 from dw::core::Binaries
output application/json
var base64String = "SGVsbG8gV29ybGQh" // Replace this with your Base64 input
---
{
  byteArray: fromBase64(base64String)
}


%dw 2.0
import * from dw::core::Binaries
output application/java
var base64String = "eyJuYW1lIjogInRlc3RlIn0="
---
fromBase64(base64String as String) as Binary {class: "byte[]"}


%dw 2.0
import * from dw::core::Binaries
output application/octet-stream
var base64String = "eyJuYW1lIjogInRlc3RlIn0="
---
fromBase64(base64String as String) as Binary {class: "byte[]"}


%dw 2.0
import fromBase64 from dw::core::Binaries
output application/java
var base64String = "SGVsbG8gV29ybGQh" // Example Base64 string
---
fromBase64(base64String) as Binary { class: "byte[]" }



1- Testar assim


%dw 2.0
output application/java
 - -
payload.parts

2 - fazer um fluxo novo passando somente arquivo, colocar log e testar chamada


3 - converter base 64

%dw 2.0
import toBase64 from dw::core::Binaries
var myFile = payload.parts.file.content
output application/json
---
{
  success: true,
  fileContent: toBase64(myFile as Binary) //encodes file
}




%dw 2.0
import * from dw::core::Binaries
output application/java
var conteudoBase64 = "5453"
var cleanedBase64 = conteudoBase64 replace /[^A-Za-z0-9+\/=]/ with ""
---
fromBase64(cleanedBase64 as String) as Binary {class: "byte[]"}
